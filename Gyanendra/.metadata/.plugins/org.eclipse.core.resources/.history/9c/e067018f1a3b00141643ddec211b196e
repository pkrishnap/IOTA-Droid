package com.example.runtracker;

import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.location.Location;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

public class RunFragment extends Fragment {
	
	private static final String RUN_ID="RUN_ID";
	
	LocationReceiver mLocationReceiver = new LocationReceiver(){

		@Override
		public void onProviderEnabledChanged(boolean enabled) {
			int toastText = enabled ? R.string.gps_enabled:R.string.gps_disabled;
			Toast.makeText(getActivity(), toastText, Toast.LENGTH_LONG).show();
			
			
		}

		@Override
		public void onLocationUpdate(Context arg0, Location loc) {
			if (mRunManager.isTrackingRun(mRun)) {
				return;
			}
			mLocation = loc;
			updateUI();
		}
		
	};
	
	private Button mStartButton,mStopButton;
	private TextView mStartedTextView,mLatitudeTextView,mLongitudeTextView,
		mAltitudeTextView,mDurationTextView;
	private RunManager mRunManager;
	private Location mLocation;
	private Run mRun;
	
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setRetainInstance(true);
		mRunManager = RunManager.get(getActivity());
		
		Bundle args = getArguments();
		if (args != null) {
			long runId = args.getLong(RUN_ID, -1);
		
		
		if (runId != -1) {
			mRun = mRunManager.getRun(runId);
			}
		}
	}
	
	
	@Override
	public View onCreateView(LayoutInflater inflater,
			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		View v = inflater.inflate(R.layout.fragment_run, container, false);
		
		mStartedTextView = (TextView) v.findViewById(R.id.run_startedTextView);
		mLatitudeTextView = (TextView) v.findViewById(R.id.run_latitudeTextView);
		mLongitudeTextView= (TextView) v.findViewById(R.id.run_longitudeTextView);
		mAltitudeTextView = (TextView) v.findViewById(R.id.run_altitudeTextView);
		mDurationTextView = (TextView) v.findViewById(R.id.run_durationTextView);
		
		mStartButton = (Button) v.findViewById(R.id.run_startButton);
		
		mStopButton = (Button) v.findViewById(R.id.run_stopButton);
		
		mStartButton.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				
				if(mRun == null){
					mRun = mRunManager.startNewRun();
				} else {
					mRunManager.startTrackingRun(mRun);
				}
				
				updateUI();
				
			}
		});
		
		mStopButton.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				mRunManager.stopRun();
				updateUI();
				
				
			}


		});
		
		updateUI();
		
		return v;
	}
	
	private void updateUI() {
		boolean isStarted = mRunManager.isTrackingRun();
		boolean isTrackingthisRun = mRunManager.isTrackingRun(mRun);
		
		mStartButton.setEnabled(!isStarted);
		mStopButton.setEnabled(isStarted && isTrackingthisRun);
		
		if (mRun != null) {
			mStartedTextView.setText(mRun.getmStartDate().toString());
		}
		
		int duration =0;
		if(mLocation != null && mRun != null){
			mLatitudeTextView.setText(Double.toString(mLocation.getLatitude()));
			mLongitudeTextView.setText(Double.toString(mLocation.getLongitude()));
			mAltitudeTextView.setText(Double.toString(mLocation.getAltitude()));
			duration = mRun.getDurationSecond(mLocation.getTime());
			
		}
		
		mDurationTextView.setText(Run.formatDuration(duration));
		
	}
	
	@Override
	public void onStart() {
		// TODO Auto-generated method stub
		super.onStart();
		getActivity().registerReceiver(mLocationReceiver, new IntentFilter(RunManager.ACTION_LOCATION));
	}
	
	@Override
	public void onStop() {
		getActivity().unregisterReceiver(mLocationReceiver);
		super.onStop();
	}
	
	public static RunFragment newInstance(long runId){
		Bundle args = new Bundle();
		args.putLong(RUN_ID, runId);
		RunFragment runFrags = new RunFragment();
		runFrags.setArguments(args);
		return runFrags;
				
	}
	

}
