package com.example.photogallery;

import java.util.ArrayList;

import android.app.AlarmManager;
import android.app.IntentService;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.ConnectivityManager;
import android.preference.PreferenceManager;
import android.util.Log;

public class PollService extends IntentService {
	
	private static final String TAG = "PollService";
	
	public static final int INTERVAL = 1000 * 15;

	public PollService() {
		super(TAG);
		// TODO Auto-generated constructor stub
	}

	@Override
	protected void onHandleIntent(Intent intent) {
		
		
		ConnectivityManager connectivityManager = (ConnectivityManager) 
				getSystemService(Context.CONNECTIVITY_SERVICE);
		
		@SuppressWarnings("deprecation")
		boolean isNetworkAvailable = (connectivityManager.getBackgroundDataSetting() && 
				connectivityManager.getActiveNetworkInfo() != null);
		
		if (!isNetworkAvailable) {
			return;
		}
		
		SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
		String query = prefs.getString(FlickerFetcher.PREF_SEARCH_QUERY, null);
		String lastResultId = prefs.getString(FlickerFetcher.LAST_RESULT_ID, null);
		
		ArrayList<GalleryItem> items;
		if (query==null) {
			items = new FlickerFetcher().fetchItems();
		} else {
			items = new FlickerFetcher().searchItems(query);
		}
		
		if(items.size() == 0)
			return;
		
		String resultID = items.get(0).getmId();
		
		if(!resultID.equals(lastResultId)){
			Log.i(TAG, "Got new Result");
		} else {
			Log.i(TAG, "Got no new results");
			
			
		}
		
		prefs.edit().putString(FlickerFetcher.LAST_RESULT_ID, resultID).commit();
			
		Log.i(TAG, "Received an Intent");

	}
	
	public static void setAlarmService(Context context,boolean isOn){
		Intent i = new Intent(context, PollService.class);
		
		PendingIntent pi = PendingIntent.getService(context, 0, i, 0);
		AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
		
		if (isOn) {
			alarmManager.setRepeating(AlarmManager.RTC, System.currentTimeMillis(), INTERVAL, pi);
			
		} else {
			alarmManager.cancel(pi);
			pi.cancel();
		}
		
	}
	
	public static boolean isAlarmOn(Context context) {
		Intent i = new Intent(context, PollService.class);
		PendingIntent pi = PendingIntent.getService(context, 0, i, PendingIntent.FLAG_NO_CREATE);
		
		
		return pi != null;
		
		
	}
	


}
