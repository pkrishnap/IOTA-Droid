package com.example.photogallery;

import java.util.ArrayList;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.AlarmManager;
import android.app.IntentService;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.Resources;
import android.net.ConnectivityManager;
import android.preference.PreferenceManager;
import android.support.v4.app.NotificationCompat;
import android.util.Log;

public class PollService extends IntentService {
	
	private static final String TAG = "PollService";
	
	public static final int INTERVAL = 1000 * 5 * 60;
	
	public static final String PREF_IS_ALARM_ON = "isAlarmOn";
	
	public static final String ACTION_SHOW_NOTIFICATION = "com.example.photogallery.SHOW_NOTIFICATION";
	
	public static final String PERM_PRIVATE = "com.example.photogallery.PRIVATE";

	public PollService() {
		super(TAG);
		// TODO Auto-generated constructor stub
	}

	@Override
	protected void onHandleIntent(Intent intent) {
		
		
		ConnectivityManager connectivityManager = (ConnectivityManager) 
				getSystemService(Context.CONNECTIVITY_SERVICE);
		
		@SuppressWarnings("deprecation")
		boolean isNetworkAvailable = (connectivityManager.getBackgroundDataSetting() && 
				connectivityManager.getActiveNetworkInfo() != null);
		
		if (!isNetworkAvailable) {
			return;
		}
		
		SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
		String query = prefs.getString(FlickerFetcher.PREF_SEARCH_QUERY, null);
		String lastResultId = prefs.getString(FlickerFetcher.LAST_RESULT_ID, null);
		
		ArrayList<GalleryItem> items;
		if (query==null) {
			items = new FlickerFetcher().fetchItems();
		} else {
			items = new FlickerFetcher().searchItems(query);
		}
		
		if(items.size() == 0)
			return;
		
		String resultID = items.get(0).getmId();
		
		if(!resultID.equals(lastResultId)){
			Log.i(TAG, "Got new Result");
			Resources rs = getResources();
			
			PendingIntent pi = PendingIntent
					.getActivity(this, 0, new Intent(this, PhotoGalleryActivity.class), 0);
			
			Notification notice = new NotificationCompat.Builder(this)
				.setTicker(rs.getString(R.string.new_picture_title))
				.setSmallIcon(android.R.drawable.ic_menu_report_image)
				.setContentTitle(rs.getString(R.string.new_picture_title))
				.setContentText(rs.getString(R.string.new_picture_text))
				.setContentIntent(pi)
				.setAutoCancel(true)
				.build();
			

			
			
			
		sendBackGroundNotification(0, notice);
			
		} else {
			Log.i(TAG, "Got no new results");
			
			
		}
		
		prefs.edit().putString(FlickerFetcher.LAST_RESULT_ID, resultID).commit();
			
		Log.i(TAG, "Received an Intent");

	}
	
	public static void setAlarmService(Context context,boolean isOn){
		Intent i = new Intent(context, PollService.class);
		
		PendingIntent pi = PendingIntent.getService(context, 0, i, 0);
		AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
		
		if (isOn) {
			alarmManager.setRepeating(AlarmManager.RTC, System.currentTimeMillis(), INTERVAL, pi);
			
		} else {
			alarmManager.cancel(pi);
			pi.cancel();
		}
		
		PreferenceManager.getDefaultSharedPreferences(context).edit().putBoolean(PREF_IS_ALARM_ON, isOn).commit();
		
	}
	
	public static boolean isAlarmOn(Context context) {
		Intent i = new Intent(context, PollService.class);
		PendingIntent pi = PendingIntent.getService(context, 0, i, PendingIntent.FLAG_NO_CREATE);
		
		
		return pi != null;
		
		
	}
	
	@SuppressLint("NewApi") void sendBackGroundNotification(int resultCode,Notification notification){
		Intent i = new Intent(ACTION_SHOW_NOTIFICATION);
		i.putExtra("RESULT_CODE", resultCode);
		i.putExtra("NOTIFICATION", notification);
		
		sendOrderedBroadcastAsUser(i, null, ACTION_SHOW_NOTIFICATION, null, null, Activity.RESULT_OK, null, null);
	}
	


}
